/*
 * generated by Xtext
 */
grammar InternalReqPatDemo;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.fraunhofer.iem.reqpat.demo.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.fraunhofer.iem.reqpat.demo.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.fraunhofer.iem.reqpat.demo.services.ReqPatDemoGrammarAccess;

}

@parser::members {
 
 	private ReqPatDemoGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ReqPatDemoGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRoot
entryRuleRoot 
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootAccess().getGroup()); }
(rule__Root__Group__0)
{ after(grammarAccess.getRootAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirementPattern
entryRuleRequirementPattern 
:
{ before(grammarAccess.getRequirementPatternRule()); }
	 ruleRequirementPattern
{ after(grammarAccess.getRequirementPatternRule()); } 
	 EOF 
;

// Rule RequirementPattern
ruleRequirementPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementPatternAccess().getGroup()); }
(rule__RequirementPattern__Group__0)
{ after(grammarAccess.getRequirementPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTheAnalysisFunction
entryRuleTheAnalysisFunction 
:
{ before(grammarAccess.getTheAnalysisFunctionRule()); }
	 ruleTheAnalysisFunction
{ after(grammarAccess.getTheAnalysisFunctionRule()); } 
	 EOF 
;

// Rule TheAnalysisFunction
ruleTheAnalysisFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTheAnalysisFunctionAccess().getGroup()); }
(rule__TheAnalysisFunction__Group__0)
{ after(grammarAccess.getTheAnalysisFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTheFollowingInformation
entryRuleTheFollowingInformation 
:
{ before(grammarAccess.getTheFollowingInformationRule()); }
	 ruleTheFollowingInformation
{ after(grammarAccess.getTheFollowingInformationRule()); } 
	 EOF 
;

// Rule TheFollowingInformation
ruleTheFollowingInformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTheFollowingInformationAccess().getGroup()); }
(rule__TheFollowingInformation__Group__0)
{ after(grammarAccess.getTheFollowingInformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnalysisFunctionDef
entryRuleAnalysisFunctionDef 
:
{ before(grammarAccess.getAnalysisFunctionDefRule()); }
	 ruleAnalysisFunctionDef
{ after(grammarAccess.getAnalysisFunctionDefRule()); } 
	 EOF 
;

// Rule AnalysisFunctionDef
ruleAnalysisFunctionDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnalysisFunctionDefAccess().getGroup()); }
(rule__AnalysisFunctionDef__Group__0)
{ after(grammarAccess.getAnalysisFunctionDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnalysisFunctionPurp
entryRuleAnalysisFunctionPurp 
:
{ before(grammarAccess.getAnalysisFunctionPurpRule()); }
	 ruleAnalysisFunctionPurp
{ after(grammarAccess.getAnalysisFunctionPurpRule()); } 
	 EOF 
;

// Rule AnalysisFunctionPurp
ruleAnalysisFunctionPurp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getGroup()); }
(rule__AnalysisFunctionPurp__Group__0)
{ after(grammarAccess.getAnalysisFunctionPurpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionalDeviceDef
entryRuleFunctionalDeviceDef 
:
{ before(grammarAccess.getFunctionalDeviceDefRule()); }
	 ruleFunctionalDeviceDef
{ after(grammarAccess.getFunctionalDeviceDefRule()); } 
	 EOF 
;

// Rule FunctionalDeviceDef
ruleFunctionalDeviceDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionalDeviceDefAccess().getGroup()); }
(rule__FunctionalDeviceDef__Group__0)
{ after(grammarAccess.getFunctionalDeviceDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionalDevice
entryRuleFunctionalDevice 
:
{ before(grammarAccess.getFunctionalDeviceRule()); }
	 ruleFunctionalDevice
{ after(grammarAccess.getFunctionalDeviceRule()); } 
	 EOF 
;

// Rule FunctionalDevice
ruleFunctionalDevice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionalDeviceAccess().getGroup()); }
(rule__FunctionalDevice__Group__0)
{ after(grammarAccess.getFunctionalDeviceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubAnalysisFunctionDef
entryRuleSubAnalysisFunctionDef 
:
{ before(grammarAccess.getSubAnalysisFunctionDefRule()); }
	 ruleSubAnalysisFunctionDef
{ after(grammarAccess.getSubAnalysisFunctionDefRule()); } 
	 EOF 
;

// Rule SubAnalysisFunctionDef
ruleSubAnalysisFunctionDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubAnalysisFunctionDefAccess().getGroup()); }
(rule__SubAnalysisFunctionDef__Group__0)
{ after(grammarAccess.getSubAnalysisFunctionDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubAnalysisFunction
entryRuleSubAnalysisFunction 
:
{ before(grammarAccess.getSubAnalysisFunctionRule()); }
	 ruleSubAnalysisFunction
{ after(grammarAccess.getSubAnalysisFunctionRule()); } 
	 EOF 
;

// Rule SubAnalysisFunction
ruleSubAnalysisFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getGroup()); }
(rule__SubAnalysisFunction__Group__0)
{ after(grammarAccess.getSubAnalysisFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIncomingInformationDef
entryRuleIncomingInformationDef 
:
{ before(grammarAccess.getIncomingInformationDefRule()); }
	 ruleIncomingInformationDef
{ after(grammarAccess.getIncomingInformationDefRule()); } 
	 EOF 
;

// Rule IncomingInformationDef
ruleIncomingInformationDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getGroup()); }
(rule__IncomingInformationDef__Group__0)
{ after(grammarAccess.getIncomingInformationDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutgoingInformationDef
entryRuleOutgoingInformationDef 
:
{ before(grammarAccess.getOutgoingInformationDefRule()); }
	 ruleOutgoingInformationDef
{ after(grammarAccess.getOutgoingInformationDefRule()); } 
	 EOF 
;

// Rule OutgoingInformationDef
ruleOutgoingInformationDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getGroup()); }
(rule__OutgoingInformationDef__Group__0)
{ after(grammarAccess.getOutgoingInformationDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInformationUsage
entryRuleInformationUsage 
:
{ before(grammarAccess.getInformationUsageRule()); }
	 ruleInformationUsage
{ after(grammarAccess.getInformationUsageRule()); } 
	 EOF 
;

// Rule InformationUsage
ruleInformationUsage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInformationUsageAccess().getGroup()); }
(rule__InformationUsage__Group__0)
{ after(grammarAccess.getInformationUsageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInformationCreation
entryRuleInformationCreation 
:
{ before(grammarAccess.getInformationCreationRule()); }
	 ruleInformationCreation
{ after(grammarAccess.getInformationCreationRule()); } 
	 EOF 
;

// Rule InformationCreation
ruleInformationCreation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInformationCreationAccess().getGroup()); }
(rule__InformationCreation__Group__0)
{ after(grammarAccess.getInformationCreationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnalysisFunction
entryRuleAnalysisFunction 
:
{ before(grammarAccess.getAnalysisFunctionRule()); }
	 ruleAnalysisFunction
{ after(grammarAccess.getAnalysisFunctionRule()); } 
	 EOF 
;

// Rule AnalysisFunction
ruleAnalysisFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnalysisFunctionAccess().getGroup()); }
(rule__AnalysisFunction__Group__0)
{ after(grammarAccess.getAnalysisFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInformation
entryRuleInformation 
:
{ before(grammarAccess.getInformationRule()); }
	 ruleInformation
{ after(grammarAccess.getInformationRule()); } 
	 EOF 
;

// Rule Information
ruleInformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInformationAccess().getGroup()); }
(rule__Information__Group__0)
{ after(grammarAccess.getInformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecObj
entryRuleSpecObj 
:
{ before(grammarAccess.getSpecObjRule()); }
	 ruleSpecObj
{ after(grammarAccess.getSpecObjRule()); } 
	 EOF 
;

// Rule SpecObj
ruleSpecObj
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecObjAccess().getGroup()); }
(rule__SpecObj__Group__0)
{ after(grammarAccess.getSpecObjAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHeadingSO
entryRuleHeadingSO 
:
{ before(grammarAccess.getHeadingSORule()); }
	 ruleHeadingSO
{ after(grammarAccess.getHeadingSORule()); } 
	 EOF 
;

// Rule HeadingSO
ruleHeadingSO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeadingSOAccess().getGroup()); }
(rule__HeadingSO__Group__0)
{ after(grammarAccess.getHeadingSOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReqPatSO
entryRuleReqPatSO 
:
{ before(grammarAccess.getReqPatSORule()); }
	 ruleReqPatSO
{ after(grammarAccess.getReqPatSORule()); } 
	 EOF 
;

// Rule ReqPatSO
ruleReqPatSO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReqPatSOAccess().getGroup()); }
(rule__ReqPatSO__Group__0)
{ after(grammarAccess.getReqPatSOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFreeTextSO
entryRuleFreeTextSO 
:
{ before(grammarAccess.getFreeTextSORule()); }
	 ruleFreeTextSO
{ after(grammarAccess.getFreeTextSORule()); } 
	 EOF 
;

// Rule FreeTextSO
ruleFreeTextSO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFreeTextSOAccess().getGroup()); }
(rule__FreeTextSO__Group__0)
{ after(grammarAccess.getFreeTextSOAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RequirementPattern__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementPatternAccess().getAnalysisFunctionDefParserRuleCall_0_0()); }
	ruleAnalysisFunctionDef
{ after(grammarAccess.getRequirementPatternAccess().getAnalysisFunctionDefParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getRequirementPatternAccess().getTheAnalysisFunctionParserRuleCall_0_1()); }
	ruleTheAnalysisFunction
{ after(grammarAccess.getRequirementPatternAccess().getTheAnalysisFunctionParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getRequirementPatternAccess().getFunctionalDeviceDefParserRuleCall_0_2()); }
	ruleFunctionalDeviceDef
{ after(grammarAccess.getRequirementPatternAccess().getFunctionalDeviceDefParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getRequirementPatternAccess().getTheFollowingInformationParserRuleCall_0_3()); }
	ruleTheFollowingInformation
{ after(grammarAccess.getRequirementPatternAccess().getTheFollowingInformationParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TheAnalysisFunction__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheAnalysisFunctionAccess().getSubAnalysisFunctionDefParserRuleCall_1_0()); }
	ruleSubAnalysisFunctionDef
{ after(grammarAccess.getTheAnalysisFunctionAccess().getSubAnalysisFunctionDefParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getTheAnalysisFunctionAccess().getAnalysisFunctionPurpParserRuleCall_1_1()); }
	ruleAnalysisFunctionPurp
{ after(grammarAccess.getTheAnalysisFunctionAccess().getAnalysisFunctionPurpParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TheFollowingInformation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheFollowingInformationAccess().getIncomingInformationDefParserRuleCall_1_0()); }
	ruleIncomingInformationDef
{ after(grammarAccess.getTheFollowingInformationAccess().getIncomingInformationDefParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getTheFollowingInformationAccess().getOutgoingInformationDefParserRuleCall_1_1()); }
	ruleOutgoingInformationDef
{ after(grammarAccess.getTheFollowingInformationAccess().getOutgoingInformationDefParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getTheFollowingInformationAccess().getInformationUsageParserRuleCall_1_2()); }
	ruleInformationUsage
{ after(grammarAccess.getTheFollowingInformationAccess().getInformationUsageParserRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getTheFollowingInformationAccess().getInformationCreationParserRuleCall_1_3()); }
	ruleInformationCreation
{ after(grammarAccess.getTheFollowingInformationAccess().getInformationCreationParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SpecObj__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecObjAccess().getHeadingSOParserRuleCall_1_0()); }
	ruleHeadingSO
{ after(grammarAccess.getSpecObjAccess().getHeadingSOParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getSpecObjAccess().getReqPatSOParserRuleCall_1_1()); }
	ruleReqPatSO
{ after(grammarAccess.getSpecObjAccess().getReqPatSOParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getSpecObjAccess().getFreeTextSOParserRuleCall_1_2()); }
	ruleFreeTextSO
{ after(grammarAccess.getSpecObjAccess().getFreeTextSOParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Root__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__0__Impl
	rule__Root__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getSpecificationAction_0()); }
(

)
{ after(grammarAccess.getRootAccess().getSpecificationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Root__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Root__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRootAccess().getSpecObjectsAssignment_1()); }
(rule__Root__SpecObjectsAssignment_1)
{ after(grammarAccess.getRootAccess().getSpecObjectsAssignment_1()); }
)
(
{ before(grammarAccess.getRootAccess().getSpecObjectsAssignment_1()); }
(rule__Root__SpecObjectsAssignment_1)*
{ after(grammarAccess.getRootAccess().getSpecObjectsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RequirementPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementPattern__Group__0__Impl
	rule__RequirementPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementPatternAccess().getAlternatives_0()); }
(rule__RequirementPattern__Alternatives_0)
{ after(grammarAccess.getRequirementPatternAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementPattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementPatternAccess().getFullStopKeyword_1()); }
(
	'.' 
)?
{ after(grammarAccess.getRequirementPatternAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TheAnalysisFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheAnalysisFunction__Group__0__Impl
	rule__TheAnalysisFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheAnalysisFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheAnalysisFunctionAccess().getTheFunctionKeyword_0()); }

	'The function' 

{ after(grammarAccess.getTheAnalysisFunctionAccess().getTheFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheAnalysisFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheAnalysisFunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheAnalysisFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheAnalysisFunctionAccess().getAlternatives_1()); }
(rule__TheAnalysisFunction__Alternatives_1)
{ after(grammarAccess.getTheAnalysisFunctionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TheFollowingInformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheFollowingInformation__Group__0__Impl
	rule__TheFollowingInformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheFollowingInformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheFollowingInformationAccess().getTheFollowingInformationKeyword_0()); }

	'The following information' 

{ after(grammarAccess.getTheFollowingInformationAccess().getTheFollowingInformationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheFollowingInformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheFollowingInformation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheFollowingInformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheFollowingInformationAccess().getAlternatives_1()); }
(rule__TheFollowingInformation__Alternatives_1)
{ after(grammarAccess.getTheFollowingInformationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnalysisFunctionDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunctionDef__Group__0__Impl
	rule__AnalysisFunctionDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionDefinitionAction_0()); }
(

)
{ after(grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnalysisFunctionDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunctionDef__Group__1__Impl
	rule__AnalysisFunctionDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionDefAccess().getTheTopLevelFunctionIsCalledKeyword_1()); }

	'The top-level function is called' 

{ after(grammarAccess.getAnalysisFunctionDefAccess().getTheTopLevelFunctionIsCalledKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnalysisFunctionDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunctionDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionAssignment_2()); }
(rule__AnalysisFunctionDef__AnalysisFunctionAssignment_2)
{ after(grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnalysisFunctionPurp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunctionPurp__Group__0__Impl
	rule__AnalysisFunctionPurp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionPurp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionPurposeAction_0()); }
(

)
{ after(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionPurposeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnalysisFunctionPurp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunctionPurp__Group__1__Impl
	rule__AnalysisFunctionPurp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionPurp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionAssignment_1()); }
(rule__AnalysisFunctionPurp__AnalysisFunctionAssignment_1)
{ after(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnalysisFunctionPurp__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunctionPurp__Group__2__Impl
	rule__AnalysisFunctionPurp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionPurp__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getHasTheFollowingPurposeKeyword_2()); }

	'has the following purpose:' 

{ after(grammarAccess.getAnalysisFunctionPurpAccess().getHasTheFollowingPurposeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnalysisFunctionPurp__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunctionPurp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionPurp__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getPurposeAssignment_3()); }
(rule__AnalysisFunctionPurp__PurposeAssignment_3)
{ after(grammarAccess.getAnalysisFunctionPurpAccess().getPurposeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionalDeviceDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalDeviceDef__Group__0__Impl
	rule__FunctionalDeviceDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDeviceDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceDefinitionAction_0()); }
(

)
{ after(grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalDeviceDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalDeviceDef__Group__1__Impl
	rule__FunctionalDeviceDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDeviceDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceDefAccess().getTheFunctionalDeviceKeyword_1()); }

	'The functional device' 

{ after(grammarAccess.getFunctionalDeviceDefAccess().getTheFunctionalDeviceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalDeviceDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalDeviceDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDeviceDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceAssignment_2()); }
(rule__FunctionalDeviceDef__FunctionalDeviceAssignment_2)
{ after(grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionalDevice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalDevice__Group__0__Impl
	rule__FunctionalDevice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDevice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceAccess().getFunctionalDeviceAction_0()); }
(

)
{ after(grammarAccess.getFunctionalDeviceAccess().getFunctionalDeviceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalDevice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalDevice__Group__1__Impl
	rule__FunctionalDevice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDevice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceAccess().getNameAssignment_1()); }
(rule__FunctionalDevice__NameAssignment_1)
{ after(grammarAccess.getFunctionalDeviceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalDevice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalDevice__Group__2__Impl
	rule__FunctionalDevice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDevice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceAccess().getHasTheFollowingPurposeKeyword_2()); }

	'has the following purpose:' 

{ after(grammarAccess.getFunctionalDeviceAccess().getHasTheFollowingPurposeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionalDevice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionalDevice__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDevice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceAccess().getPurposeAssignment_3()); }
(rule__FunctionalDevice__PurposeAssignment_3)
{ after(grammarAccess.getFunctionalDeviceAccess().getPurposeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SubAnalysisFunctionDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAnalysisFunctionDef__Group__0__Impl
	rule__SubAnalysisFunctionDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunctionDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionDefAccess().getSubAnalysisFunctionDefinitionAction_0()); }
(

)
{ after(grammarAccess.getSubAnalysisFunctionDefAccess().getSubAnalysisFunctionDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAnalysisFunctionDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAnalysisFunctionDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunctionDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionDefAccess().getAnalysisFunctionAssignment_1()); }
(rule__SubAnalysisFunctionDef__AnalysisFunctionAssignment_1)
{ after(grammarAccess.getSubAnalysisFunctionDefAccess().getAnalysisFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubAnalysisFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAnalysisFunction__Group__0__Impl
	rule__SubAnalysisFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getAnalysisFunctionAction_0()); }
(

)
{ after(grammarAccess.getSubAnalysisFunctionAccess().getAnalysisFunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAnalysisFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAnalysisFunction__Group__1__Impl
	rule__SubAnalysisFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getNameAssignment_1()); }
(rule__SubAnalysisFunction__NameAssignment_1)
{ after(grammarAccess.getSubAnalysisFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAnalysisFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAnalysisFunction__Group__2__Impl
	rule__SubAnalysisFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getIsASubfunctionOfTheFunctionKeyword_2()); }

	'is a subfunction of the function' 

{ after(grammarAccess.getSubAnalysisFunctionAccess().getIsASubfunctionOfTheFunctionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubAnalysisFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubAnalysisFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getParentAnalysisFunctionAssignment_3()); }
(rule__SubAnalysisFunction__ParentAnalysisFunctionAssignment_3)
{ after(grammarAccess.getSubAnalysisFunctionAccess().getParentAnalysisFunctionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IncomingInformationDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group__0__Impl
	rule__IncomingInformationDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getIncomingInformationDefinitionAction_0()); }
(

)
{ after(grammarAccess.getIncomingInformationDefAccess().getIncomingInformationDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group__1__Impl
	rule__IncomingInformationDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getIsReceivedByTheFunctionKeyword_1()); }

	'is received by the function' 

{ after(grammarAccess.getIncomingInformationDefAccess().getIsReceivedByTheFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group__2__Impl
	rule__IncomingInformationDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getAnalysisFunctionAssignment_2()); }
(rule__IncomingInformationDef__AnalysisFunctionAssignment_2)
{ after(grammarAccess.getIncomingInformationDefAccess().getAnalysisFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group__3__Impl
	rule__IncomingInformationDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getGroup_3()); }
(rule__IncomingInformationDef__Group_3__0)?
{ after(grammarAccess.getIncomingInformationDefAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group__4__Impl
	rule__IncomingInformationDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getIncomingInformationDefAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group__5__Impl
	rule__IncomingInformationDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getInformationListAssignment_5()); }
(rule__IncomingInformationDef__InformationListAssignment_5)
{ after(grammarAccess.getIncomingInformationDefAccess().getInformationListAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getGroup_6()); }
(rule__IncomingInformationDef__Group_6__0)*
{ after(grammarAccess.getIncomingInformationDefAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IncomingInformationDef__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group_3__0__Impl
	rule__IncomingInformationDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getFromTheFunctionalDeviceKeyword_3_0()); }

	'from the functional device' 

{ after(grammarAccess.getIncomingInformationDefAccess().getFromTheFunctionalDeviceKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getFunctionalDeviceAssignment_3_1()); }
(rule__IncomingInformationDef__FunctionalDeviceAssignment_3_1)
{ after(grammarAccess.getIncomingInformationDefAccess().getFunctionalDeviceAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IncomingInformationDef__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group_6__0__Impl
	rule__IncomingInformationDef__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getIncomingInformationDefAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IncomingInformationDef__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IncomingInformationDef__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getInformationListAssignment_6_1()); }
(rule__IncomingInformationDef__InformationListAssignment_6_1)
{ after(grammarAccess.getIncomingInformationDefAccess().getInformationListAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutgoingInformationDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group__0__Impl
	rule__OutgoingInformationDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getOutgoingInformationDefinitionAction_0()); }
(

)
{ after(grammarAccess.getOutgoingInformationDefAccess().getOutgoingInformationDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group__1__Impl
	rule__OutgoingInformationDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getIsSentFromTheFunctionKeyword_1()); }

	'is sent from the function' 

{ after(grammarAccess.getOutgoingInformationDefAccess().getIsSentFromTheFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group__2__Impl
	rule__OutgoingInformationDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getAnalysisFunctionAssignment_2()); }
(rule__OutgoingInformationDef__AnalysisFunctionAssignment_2)
{ after(grammarAccess.getOutgoingInformationDefAccess().getAnalysisFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group__3__Impl
	rule__OutgoingInformationDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getGroup_3()); }
(rule__OutgoingInformationDef__Group_3__0)?
{ after(grammarAccess.getOutgoingInformationDefAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group__4__Impl
	rule__OutgoingInformationDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getOutgoingInformationDefAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group__5__Impl
	rule__OutgoingInformationDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getInformationListAssignment_5()); }
(rule__OutgoingInformationDef__InformationListAssignment_5)
{ after(grammarAccess.getOutgoingInformationDefAccess().getInformationListAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getGroup_6()); }
(rule__OutgoingInformationDef__Group_6__0)*
{ after(grammarAccess.getOutgoingInformationDefAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__OutgoingInformationDef__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group_3__0__Impl
	rule__OutgoingInformationDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getToTheFunctionalDeviceKeyword_3_0()); }

	'to the functional device' 

{ after(grammarAccess.getOutgoingInformationDefAccess().getToTheFunctionalDeviceKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getFunctionalDeviceAssignment_3_1()); }
(rule__OutgoingInformationDef__FunctionalDeviceAssignment_3_1)
{ after(grammarAccess.getOutgoingInformationDefAccess().getFunctionalDeviceAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutgoingInformationDef__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group_6__0__Impl
	rule__OutgoingInformationDef__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getOutgoingInformationDefAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutgoingInformationDef__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutgoingInformationDef__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getInformationListAssignment_6_1()); }
(rule__OutgoingInformationDef__InformationListAssignment_6_1)
{ after(grammarAccess.getOutgoingInformationDefAccess().getInformationListAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InformationUsage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group__0__Impl
	rule__InformationUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getInformationUsageAction_0()); }
(

)
{ after(grammarAccess.getInformationUsageAccess().getInformationUsageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationUsage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group__1__Impl
	rule__InformationUsage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getIsUsedByTheFunctionKeyword_1()); }

	'is used by the function' 

{ after(grammarAccess.getInformationUsageAccess().getIsUsedByTheFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationUsage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group__2__Impl
	rule__InformationUsage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getAnalysisFunctionAssignment_2()); }
(rule__InformationUsage__AnalysisFunctionAssignment_2)
{ after(grammarAccess.getInformationUsageAccess().getAnalysisFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationUsage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group__3__Impl
	rule__InformationUsage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getInformationUsageAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationUsage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group__4__Impl
	rule__InformationUsage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getInformationListAssignment_4()); }
(rule__InformationUsage__InformationListAssignment_4)
{ after(grammarAccess.getInformationUsageAccess().getInformationListAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationUsage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getGroup_5()); }
(rule__InformationUsage__Group_5__0)*
{ after(grammarAccess.getInformationUsageAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InformationUsage__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group_5__0__Impl
	rule__InformationUsage__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getInformationUsageAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationUsage__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationUsage__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getInformationListAssignment_5_1()); }
(rule__InformationUsage__InformationListAssignment_5_1)
{ after(grammarAccess.getInformationUsageAccess().getInformationListAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InformationCreation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group__0__Impl
	rule__InformationCreation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getInformationCreationAction_0()); }
(

)
{ after(grammarAccess.getInformationCreationAccess().getInformationCreationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationCreation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group__1__Impl
	rule__InformationCreation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getIsCreatedByTheFunctionKeyword_1()); }

	'is created by the function' 

{ after(grammarAccess.getInformationCreationAccess().getIsCreatedByTheFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationCreation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group__2__Impl
	rule__InformationCreation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getAnalysisFunctionAssignment_2()); }
(rule__InformationCreation__AnalysisFunctionAssignment_2)
{ after(grammarAccess.getInformationCreationAccess().getAnalysisFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationCreation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group__3__Impl
	rule__InformationCreation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getInformationCreationAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationCreation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group__4__Impl
	rule__InformationCreation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getInformationListAssignment_4()); }
(rule__InformationCreation__InformationListAssignment_4)
{ after(grammarAccess.getInformationCreationAccess().getInformationListAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationCreation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getGroup_5()); }
(rule__InformationCreation__Group_5__0)*
{ after(grammarAccess.getInformationCreationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InformationCreation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group_5__0__Impl
	rule__InformationCreation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getInformationCreationAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InformationCreation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InformationCreation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getInformationListAssignment_5_1()); }
(rule__InformationCreation__InformationListAssignment_5_1)
{ after(grammarAccess.getInformationCreationAccess().getInformationListAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnalysisFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunction__Group__0__Impl
	rule__AnalysisFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionAccess().getAnalysisFunctionAction_0()); }
(

)
{ after(grammarAccess.getAnalysisFunctionAccess().getAnalysisFunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnalysisFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnalysisFunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionAccess().getNameAssignment_1()); }
(rule__AnalysisFunction__NameAssignment_1)
{ after(grammarAccess.getAnalysisFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Information__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Information__Group__0__Impl
	rule__Information__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Information__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationAccess().getInformationAction_0()); }
(

)
{ after(grammarAccess.getInformationAccess().getInformationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Information__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Information__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Information__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationAccess().getNameAssignment_1()); }
(rule__Information__NameAssignment_1)
{ after(grammarAccess.getInformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecObj__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecObj__Group__0__Impl
	rule__SpecObj__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecObj__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecObjAccess().getSPECOBJECTDELIMITERLEFTTerminalRuleCall_0()); }
	RULE_SPECOBJECTDELIMITERLEFT
{ after(grammarAccess.getSpecObjAccess().getSPECOBJECTDELIMITERLEFTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecObj__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecObj__Group__1__Impl
	rule__SpecObj__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecObj__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecObjAccess().getAlternatives_1()); }
(rule__SpecObj__Alternatives_1)
{ after(grammarAccess.getSpecObjAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecObj__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecObj__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecObj__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecObjAccess().getSPECOBJECTDELIMITERRIGHTTerminalRuleCall_2()); }
	RULE_SPECOBJECTDELIMITERRIGHT
{ after(grammarAccess.getSpecObjAccess().getSPECOBJECTDELIMITERRIGHTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HeadingSO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__0__Impl
	rule__HeadingSO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getHeadingSpecObjectAction_0()); }
(

)
{ after(grammarAccess.getHeadingSOAccess().getHeadingSpecObjectAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__1__Impl
	rule__HeadingSO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__2__Impl
	rule__HeadingSO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getHKeyword_2()); }

	'H' 

{ after(grammarAccess.getHeadingSOAccess().getHKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__3__Impl
	rule__HeadingSO__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__4__Impl
	rule__HeadingSO__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__5__Impl
	rule__HeadingSO__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getIdAssignment_5()); }
(rule__HeadingSO__IdAssignment_5)
{ after(grammarAccess.getHeadingSOAccess().getIdAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__6__Impl
	rule__HeadingSO__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__7__Impl
	rule__HeadingSO__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getGroup_7()); }
(rule__HeadingSO__Group_7__0)?
{ after(grammarAccess.getHeadingSOAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getTextAssignment_8()); }
(rule__HeadingSO__TextAssignment_8)
{ after(grammarAccess.getHeadingSOAccess().getTextAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__HeadingSO__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group_7__0__Impl
	rule__HeadingSO__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group_7__1__Impl
	rule__HeadingSO__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getParentAssignment_7_1()); }
(rule__HeadingSO__ParentAssignment_7_1)
{ after(grammarAccess.getHeadingSOAccess().getParentAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HeadingSO__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HeadingSO__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReqPatSO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__0__Impl
	rule__ReqPatSO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getRequirementPatternSpecObjectAction_0()); }
(

)
{ after(grammarAccess.getReqPatSOAccess().getRequirementPatternSpecObjectAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__1__Impl
	rule__ReqPatSO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__2__Impl
	rule__ReqPatSO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getRPKeyword_2()); }

	'RP' 

{ after(grammarAccess.getReqPatSOAccess().getRPKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__3__Impl
	rule__ReqPatSO__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__4__Impl
	rule__ReqPatSO__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__5__Impl
	rule__ReqPatSO__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getIdAssignment_5()); }
(rule__ReqPatSO__IdAssignment_5)
{ after(grammarAccess.getReqPatSOAccess().getIdAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__6__Impl
	rule__ReqPatSO__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__7__Impl
	rule__ReqPatSO__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getGroup_7()); }
(rule__ReqPatSO__Group_7__0)?
{ after(grammarAccess.getReqPatSOAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getReqPatSOAccess().getRequirementPatternsAssignment_8()); }
(rule__ReqPatSO__RequirementPatternsAssignment_8)
{ after(grammarAccess.getReqPatSOAccess().getRequirementPatternsAssignment_8()); }
)
(
{ before(grammarAccess.getReqPatSOAccess().getRequirementPatternsAssignment_8()); }
(rule__ReqPatSO__RequirementPatternsAssignment_8)*
{ after(grammarAccess.getReqPatSOAccess().getRequirementPatternsAssignment_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ReqPatSO__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group_7__0__Impl
	rule__ReqPatSO__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group_7__1__Impl
	rule__ReqPatSO__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getParentAssignment_7_1()); }
(rule__ReqPatSO__ParentAssignment_7_1)
{ after(grammarAccess.getReqPatSOAccess().getParentAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReqPatSO__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReqPatSO__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FreeTextSO__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__0__Impl
	rule__FreeTextSO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getFreeTextSpecObjectAction_0()); }
(

)
{ after(grammarAccess.getFreeTextSOAccess().getFreeTextSpecObjectAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__1__Impl
	rule__FreeTextSO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__2__Impl
	rule__FreeTextSO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getFKeyword_2()); }

	'F' 

{ after(grammarAccess.getFreeTextSOAccess().getFKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__3__Impl
	rule__FreeTextSO__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__4__Impl
	rule__FreeTextSO__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__5__Impl
	rule__FreeTextSO__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getIdAssignment_5()); }
(rule__FreeTextSO__IdAssignment_5)
{ after(grammarAccess.getFreeTextSOAccess().getIdAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__6__Impl
	rule__FreeTextSO__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__7__Impl
	rule__FreeTextSO__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getGroup_7()); }
(rule__FreeTextSO__Group_7__0)?
{ after(grammarAccess.getFreeTextSOAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getFreeTextAssignment_8()); }
(rule__FreeTextSO__FreeTextAssignment_8)?
{ after(grammarAccess.getFreeTextSOAccess().getFreeTextAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__FreeTextSO__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group_7__0__Impl
	rule__FreeTextSO__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); }
	RULE_PARAMDELIMITERLEFT
{ after(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group_7__1__Impl
	rule__FreeTextSO__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getParentAssignment_7_1()); }
(rule__FreeTextSO__ParentAssignment_7_1)
{ after(grammarAccess.getFreeTextSOAccess().getParentAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FreeTextSO__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FreeTextSO__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); }
	RULE_PARAMDELIMITERRIGHT
{ after(grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Root__SpecObjectsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootAccess().getSpecObjectsSpecObjParserRuleCall_1_0()); }
	ruleSpecObj{ after(grammarAccess.getRootAccess().getSpecObjectsSpecObjParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionDef__AnalysisFunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionAnalysisFunctionParserRuleCall_2_0()); }
	ruleAnalysisFunction{ after(grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionAnalysisFunctionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionPurp__AnalysisFunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionAnalysisFunctionCrossReference_1_0()); }
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionAnalysisFunctionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunctionPurp__PurposeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionPurpAccess().getPurposeSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getAnalysisFunctionPurpAccess().getPurposeSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDeviceDef__FunctionalDeviceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceFunctionalDeviceParserRuleCall_2_0()); }
	ruleFunctionalDevice{ after(grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceFunctionalDeviceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDevice__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionalDeviceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionalDevice__PurposeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionalDeviceAccess().getPurposeSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getFunctionalDeviceAccess().getPurposeSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunctionDef__AnalysisFunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionDefAccess().getAnalysisFunctionSubAnalysisFunctionParserRuleCall_1_0()); }
	ruleSubAnalysisFunction{ after(grammarAccess.getSubAnalysisFunctionDefAccess().getAnalysisFunctionSubAnalysisFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunction__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSubAnalysisFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubAnalysisFunction__ParentAnalysisFunctionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getParentAnalysisFunctionAnalysisFunctionCrossReference_3_0()); }
(
{ before(grammarAccess.getSubAnalysisFunctionAccess().getParentAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getSubAnalysisFunctionAccess().getParentAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getSubAnalysisFunctionAccess().getParentAnalysisFunctionAnalysisFunctionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__AnalysisFunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
(
{ before(grammarAccess.getIncomingInformationDefAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getIncomingInformationDefAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getIncomingInformationDefAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__FunctionalDeviceAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getFunctionalDeviceFunctionalDeviceCrossReference_3_1_0()); }
(
{ before(grammarAccess.getIncomingInformationDefAccess().getFunctionalDeviceFunctionalDeviceIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIncomingInformationDefAccess().getFunctionalDeviceFunctionalDeviceIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getIncomingInformationDefAccess().getFunctionalDeviceFunctionalDeviceCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__InformationListAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getInformationListInformationParserRuleCall_5_0()); }
	ruleInformation{ after(grammarAccess.getIncomingInformationDefAccess().getInformationListInformationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IncomingInformationDef__InformationListAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncomingInformationDefAccess().getInformationListInformationParserRuleCall_6_1_0()); }
	ruleInformation{ after(grammarAccess.getIncomingInformationDefAccess().getInformationListInformationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__AnalysisFunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOutgoingInformationDefAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getOutgoingInformationDefAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__FunctionalDeviceAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getFunctionalDeviceFunctionalDeviceCrossReference_3_1_0()); }
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getFunctionalDeviceFunctionalDeviceIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOutgoingInformationDefAccess().getFunctionalDeviceFunctionalDeviceIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getOutgoingInformationDefAccess().getFunctionalDeviceFunctionalDeviceCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__InformationListAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getInformationListInformationParserRuleCall_5_0()); }
	ruleInformation{ after(grammarAccess.getOutgoingInformationDefAccess().getInformationListInformationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutgoingInformationDef__InformationListAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutgoingInformationDefAccess().getInformationListInformationParserRuleCall_6_1_0()); }
	ruleInformation{ after(grammarAccess.getOutgoingInformationDefAccess().getInformationListInformationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__AnalysisFunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
(
{ before(grammarAccess.getInformationUsageAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getInformationUsageAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getInformationUsageAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__InformationListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getInformationListInformationCrossReference_4_0()); }
(
{ before(grammarAccess.getInformationUsageAccess().getInformationListInformationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getInformationUsageAccess().getInformationListInformationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getInformationUsageAccess().getInformationListInformationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InformationUsage__InformationListAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationUsageAccess().getInformationListInformationCrossReference_5_1_0()); }
(
{ before(grammarAccess.getInformationUsageAccess().getInformationListInformationIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInformationUsageAccess().getInformationListInformationIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getInformationUsageAccess().getInformationListInformationCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__AnalysisFunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
(
{ before(grammarAccess.getInformationCreationAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getInformationCreationAccess().getAnalysisFunctionAnalysisFunctionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getInformationCreationAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__InformationListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getInformationListInformationCrossReference_4_0()); }
(
{ before(grammarAccess.getInformationCreationAccess().getInformationListInformationIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getInformationCreationAccess().getInformationListInformationIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getInformationCreationAccess().getInformationListInformationCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InformationCreation__InformationListAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationCreationAccess().getInformationListInformationCrossReference_5_1_0()); }
(
{ before(grammarAccess.getInformationCreationAccess().getInformationListInformationIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInformationCreationAccess().getInformationListInformationIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getInformationCreationAccess().getInformationListInformationCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnalysisFunction__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnalysisFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnalysisFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Information__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInformationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInformationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__IdAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getIdIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getHeadingSOAccess().getIdIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__ParentAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); }
	RULE_STRING{ after(grammarAccess.getHeadingSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HeadingSO__TextAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadingSOAccess().getTextSTRINGTerminalRuleCall_8_0()); }
	RULE_STRING{ after(grammarAccess.getHeadingSOAccess().getTextSTRINGTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__IdAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getIdIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getReqPatSOAccess().getIdIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__ParentAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); }
	RULE_STRING{ after(grammarAccess.getReqPatSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReqPatSO__RequirementPatternsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReqPatSOAccess().getRequirementPatternsRequirementPatternParserRuleCall_8_0()); }
	ruleRequirementPattern{ after(grammarAccess.getReqPatSOAccess().getRequirementPatternsRequirementPatternParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__IdAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getIdIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getFreeTextSOAccess().getIdIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__ParentAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); }
	RULE_STRING{ after(grammarAccess.getFreeTextSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FreeTextSO__FreeTextAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreeTextSOAccess().getFreeTextSTRINGTerminalRuleCall_8_0()); }
	RULE_STRING{ after(grammarAccess.getFreeTextSOAccess().getFreeTextSTRINGTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_PARAMDELIMITERLEFT : '[';

RULE_PARAMDELIMITERRIGHT : ']';

RULE_SPECOBJECTDELIMITERLEFT : '{';

RULE_SPECOBJECTDELIMITERRIGHT : '}';

RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


