/*
 * generated by Xtext
 */
grammar InternalReqPatDemo;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.fraunhofer.iem.reqpat.demo.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.fraunhofer.iem.reqpat.demo.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.fraunhofer.iem.reqpat.demo.services.ReqPatDemoGrammarAccess;

}

@parser::members {

 	private ReqPatDemoGrammarAccess grammarAccess;
 	
    public InternalReqPatDemoParser(TokenStream input, ReqPatDemoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Root";	
   	}
   	
   	@Override
   	protected ReqPatDemoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	 iv_ruleRoot=ruleRoot 
	 { $current=$iv_ruleRoot.current; } 
	 EOF 
;

// Rule Root
ruleRoot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRootAccess().getSpecificationAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRootAccess().getSpecObjectsSpecObjParserRuleCall_1_0()); 
	    }
		lv_specObjects_1_0=ruleSpecObj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRootRule());
	        }
       		add(
       			$current, 
       			"specObjects",
        		lv_specObjects_1_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.SpecObj");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleRequirementPattern
entryRuleRequirementPattern returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementPatternRule()); }
	 iv_ruleRequirementPattern=ruleRequirementPattern 
	 { $current=$iv_ruleRequirementPattern.current; } 
	 EOF 
;

// Rule RequirementPattern
ruleRequirementPattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getRequirementPatternAccess().getAnalysisFunctionDefParserRuleCall_0_0()); 
    }
    this_AnalysisFunctionDef_0=ruleAnalysisFunctionDef
    { 
        $current = $this_AnalysisFunctionDef_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementPatternAccess().getTheAnalysisFunctionParserRuleCall_0_1()); 
    }
    this_TheAnalysisFunction_1=ruleTheAnalysisFunction
    { 
        $current = $this_TheAnalysisFunction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementPatternAccess().getFunctionalDeviceDefParserRuleCall_0_2()); 
    }
    this_FunctionalDeviceDef_2=ruleFunctionalDeviceDef
    { 
        $current = $this_FunctionalDeviceDef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementPatternAccess().getTheFollowingInformationParserRuleCall_0_3()); 
    }
    this_TheFollowingInformation_3=ruleTheFollowingInformation
    { 
        $current = $this_TheFollowingInformation_3.current; 
        afterParserOrEnumRuleCall();
    }
)(	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRequirementPatternAccess().getFullStopKeyword_1());
    }
)?)
;





// Entry rule entryRuleTheAnalysisFunction
entryRuleTheAnalysisFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTheAnalysisFunctionRule()); }
	 iv_ruleTheAnalysisFunction=ruleTheAnalysisFunction 
	 { $current=$iv_ruleTheAnalysisFunction.current; } 
	 EOF 
;

// Rule TheAnalysisFunction
ruleTheAnalysisFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='The function' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTheAnalysisFunctionAccess().getTheFunctionKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getTheAnalysisFunctionAccess().getSubAnalysisFunctionDefParserRuleCall_1_0()); 
    }
    this_SubAnalysisFunctionDef_1=ruleSubAnalysisFunctionDef
    { 
        $current = $this_SubAnalysisFunctionDef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTheAnalysisFunctionAccess().getAnalysisFunctionPurpParserRuleCall_1_1()); 
    }
    this_AnalysisFunctionPurp_2=ruleAnalysisFunctionPurp
    { 
        $current = $this_AnalysisFunctionPurp_2.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleTheFollowingInformation
entryRuleTheFollowingInformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTheFollowingInformationRule()); }
	 iv_ruleTheFollowingInformation=ruleTheFollowingInformation 
	 { $current=$iv_ruleTheFollowingInformation.current; } 
	 EOF 
;

// Rule TheFollowingInformation
ruleTheFollowingInformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='The following information' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTheFollowingInformationAccess().getTheFollowingInformationKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getTheFollowingInformationAccess().getIncomingInformationDefParserRuleCall_1_0()); 
    }
    this_IncomingInformationDef_1=ruleIncomingInformationDef
    { 
        $current = $this_IncomingInformationDef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTheFollowingInformationAccess().getOutgoingInformationDefParserRuleCall_1_1()); 
    }
    this_OutgoingInformationDef_2=ruleOutgoingInformationDef
    { 
        $current = $this_OutgoingInformationDef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTheFollowingInformationAccess().getInformationUsageParserRuleCall_1_2()); 
    }
    this_InformationUsage_3=ruleInformationUsage
    { 
        $current = $this_InformationUsage_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTheFollowingInformationAccess().getInformationCreationParserRuleCall_1_3()); 
    }
    this_InformationCreation_4=ruleInformationCreation
    { 
        $current = $this_InformationCreation_4.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleAnalysisFunctionDef
entryRuleAnalysisFunctionDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnalysisFunctionDefRule()); }
	 iv_ruleAnalysisFunctionDef=ruleAnalysisFunctionDef 
	 { $current=$iv_ruleAnalysisFunctionDef.current; } 
	 EOF 
;

// Rule AnalysisFunctionDef
ruleAnalysisFunctionDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionDefinitionAction_0(),
            $current);
    }
)	otherlv_1='The top-level function is called' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnalysisFunctionDefAccess().getTheTopLevelFunctionIsCalledKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnalysisFunctionDefAccess().getAnalysisFunctionAnalysisFunctionParserRuleCall_2_0()); 
	    }
		lv_analysisFunction_2_0=ruleAnalysisFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnalysisFunctionDefRule());
	        }
       		set(
       			$current, 
       			"analysisFunction",
        		lv_analysisFunction_2_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.AnalysisFunction");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAnalysisFunctionPurp
entryRuleAnalysisFunctionPurp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnalysisFunctionPurpRule()); }
	 iv_ruleAnalysisFunctionPurp=ruleAnalysisFunctionPurp 
	 { $current=$iv_ruleAnalysisFunctionPurp.current; } 
	 EOF 
;

// Rule AnalysisFunctionPurp
ruleAnalysisFunctionPurp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionPurposeAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnalysisFunctionPurpRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAnalysisFunctionPurpAccess().getAnalysisFunctionAnalysisFunctionCrossReference_1_0()); 
	}

)
)	otherlv_2='has the following purpose:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnalysisFunctionPurpAccess().getHasTheFollowingPurposeKeyword_2());
    }
(
(
		lv_purpose_3_0=RULE_STRING
		{
			newLeafNode(lv_purpose_3_0, grammarAccess.getAnalysisFunctionPurpAccess().getPurposeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnalysisFunctionPurpRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"purpose",
        		lv_purpose_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleFunctionalDeviceDef
entryRuleFunctionalDeviceDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionalDeviceDefRule()); }
	 iv_ruleFunctionalDeviceDef=ruleFunctionalDeviceDef 
	 { $current=$iv_ruleFunctionalDeviceDef.current; } 
	 EOF 
;

// Rule FunctionalDeviceDef
ruleFunctionalDeviceDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceDefinitionAction_0(),
            $current);
    }
)	otherlv_1='The functional device' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionalDeviceDefAccess().getTheFunctionalDeviceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionalDeviceDefAccess().getFunctionalDeviceFunctionalDeviceParserRuleCall_2_0()); 
	    }
		lv_functionalDevice_2_0=ruleFunctionalDevice		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionalDeviceDefRule());
	        }
       		set(
       			$current, 
       			"functionalDevice",
        		lv_functionalDevice_2_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.FunctionalDevice");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFunctionalDevice
entryRuleFunctionalDevice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionalDeviceRule()); }
	 iv_ruleFunctionalDevice=ruleFunctionalDevice 
	 { $current=$iv_ruleFunctionalDevice.current; } 
	 EOF 
;

// Rule FunctionalDevice
ruleFunctionalDevice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionalDeviceAccess().getFunctionalDeviceAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFunctionalDeviceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionalDeviceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.ID");
	    }

)
)	otherlv_2='has the following purpose:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionalDeviceAccess().getHasTheFollowingPurposeKeyword_2());
    }
(
(
		lv_purpose_3_0=RULE_STRING
		{
			newLeafNode(lv_purpose_3_0, grammarAccess.getFunctionalDeviceAccess().getPurposeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionalDeviceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"purpose",
        		lv_purpose_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleSubAnalysisFunctionDef
entryRuleSubAnalysisFunctionDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubAnalysisFunctionDefRule()); }
	 iv_ruleSubAnalysisFunctionDef=ruleSubAnalysisFunctionDef 
	 { $current=$iv_ruleSubAnalysisFunctionDef.current; } 
	 EOF 
;

// Rule SubAnalysisFunctionDef
ruleSubAnalysisFunctionDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSubAnalysisFunctionDefAccess().getSubAnalysisFunctionDefinitionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubAnalysisFunctionDefAccess().getAnalysisFunctionSubAnalysisFunctionParserRuleCall_1_0()); 
	    }
		lv_analysisFunction_1_0=ruleSubAnalysisFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubAnalysisFunctionDefRule());
	        }
       		set(
       			$current, 
       			"analysisFunction",
        		lv_analysisFunction_1_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.SubAnalysisFunction");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubAnalysisFunction
entryRuleSubAnalysisFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubAnalysisFunctionRule()); }
	 iv_ruleSubAnalysisFunction=ruleSubAnalysisFunction 
	 { $current=$iv_ruleSubAnalysisFunction.current; } 
	 EOF 
;

// Rule SubAnalysisFunction
ruleSubAnalysisFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSubAnalysisFunctionAccess().getAnalysisFunctionAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubAnalysisFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubAnalysisFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.ID");
	    }

)
)	otherlv_2='is a subfunction of the function' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubAnalysisFunctionAccess().getIsASubfunctionOfTheFunctionKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubAnalysisFunctionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSubAnalysisFunctionAccess().getParentAnalysisFunctionAnalysisFunctionCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleIncomingInformationDef
entryRuleIncomingInformationDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncomingInformationDefRule()); }
	 iv_ruleIncomingInformationDef=ruleIncomingInformationDef 
	 { $current=$iv_ruleIncomingInformationDef.current; } 
	 EOF 
;

// Rule IncomingInformationDef
ruleIncomingInformationDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIncomingInformationDefAccess().getIncomingInformationDefinitionAction_0(),
            $current);
    }
)	otherlv_1='is received by the function' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIncomingInformationDefAccess().getIsReceivedByTheFunctionKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncomingInformationDefRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getIncomingInformationDefAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); 
	}

)
)(	otherlv_3='from the functional device' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIncomingInformationDefAccess().getFromTheFunctionalDeviceKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncomingInformationDefRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getIncomingInformationDefAccess().getFunctionalDeviceFunctionalDeviceCrossReference_3_1_0()); 
	}

)
))?	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIncomingInformationDefAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncomingInformationDefAccess().getInformationListInformationParserRuleCall_5_0()); 
	    }
		lv_informationList_6_0=ruleInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncomingInformationDefRule());
	        }
       		add(
       			$current, 
       			"informationList",
        		lv_informationList_6_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.Information");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIncomingInformationDefAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIncomingInformationDefAccess().getInformationListInformationParserRuleCall_6_1_0()); 
	    }
		lv_informationList_8_0=ruleInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIncomingInformationDefRule());
	        }
       		add(
       			$current, 
       			"informationList",
        		lv_informationList_8_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.Information");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOutgoingInformationDef
entryRuleOutgoingInformationDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutgoingInformationDefRule()); }
	 iv_ruleOutgoingInformationDef=ruleOutgoingInformationDef 
	 { $current=$iv_ruleOutgoingInformationDef.current; } 
	 EOF 
;

// Rule OutgoingInformationDef
ruleOutgoingInformationDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutgoingInformationDefAccess().getOutgoingInformationDefinitionAction_0(),
            $current);
    }
)	otherlv_1='is sent from the function' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutgoingInformationDefAccess().getIsSentFromTheFunctionKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutgoingInformationDefRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getOutgoingInformationDefAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); 
	}

)
)(	otherlv_3='to the functional device' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutgoingInformationDefAccess().getToTheFunctionalDeviceKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutgoingInformationDefRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getOutgoingInformationDefAccess().getFunctionalDeviceFunctionalDeviceCrossReference_3_1_0()); 
	}

)
))?	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOutgoingInformationDefAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutgoingInformationDefAccess().getInformationListInformationParserRuleCall_5_0()); 
	    }
		lv_informationList_6_0=ruleInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutgoingInformationDefRule());
	        }
       		add(
       			$current, 
       			"informationList",
        		lv_informationList_6_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.Information");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOutgoingInformationDefAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutgoingInformationDefAccess().getInformationListInformationParserRuleCall_6_1_0()); 
	    }
		lv_informationList_8_0=ruleInformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutgoingInformationDefRule());
	        }
       		add(
       			$current, 
       			"informationList",
        		lv_informationList_8_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.Information");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInformationUsage
entryRuleInformationUsage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInformationUsageRule()); }
	 iv_ruleInformationUsage=ruleInformationUsage 
	 { $current=$iv_ruleInformationUsage.current; } 
	 EOF 
;

// Rule InformationUsage
ruleInformationUsage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInformationUsageAccess().getInformationUsageAction_0(),
            $current);
    }
)	otherlv_1='is used by the function' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInformationUsageAccess().getIsUsedByTheFunctionKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationUsageRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInformationUsageAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); 
	}

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInformationUsageAccess().getColonKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationUsageRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getInformationUsageAccess().getInformationListInformationCrossReference_4_0()); 
	}

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInformationUsageAccess().getCommaKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationUsageRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getInformationUsageAccess().getInformationListInformationCrossReference_5_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleInformationCreation
entryRuleInformationCreation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInformationCreationRule()); }
	 iv_ruleInformationCreation=ruleInformationCreation 
	 { $current=$iv_ruleInformationCreation.current; } 
	 EOF 
;

// Rule InformationCreation
ruleInformationCreation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInformationCreationAccess().getInformationCreationAction_0(),
            $current);
    }
)	otherlv_1='is created by the function' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInformationCreationAccess().getIsCreatedByTheFunctionKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationCreationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInformationCreationAccess().getAnalysisFunctionAnalysisFunctionCrossReference_2_0()); 
	}

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInformationCreationAccess().getColonKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationCreationRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getInformationCreationAccess().getInformationListInformationCrossReference_4_0()); 
	}

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInformationCreationAccess().getCommaKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationCreationRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getInformationCreationAccess().getInformationListInformationCrossReference_5_1_0()); 
	}

)
))*)
;





// Entry rule entryRuleAnalysisFunction
entryRuleAnalysisFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnalysisFunctionRule()); }
	 iv_ruleAnalysisFunction=ruleAnalysisFunction 
	 { $current=$iv_ruleAnalysisFunction.current; } 
	 EOF 
;

// Rule AnalysisFunction
ruleAnalysisFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnalysisFunctionAccess().getAnalysisFunctionAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAnalysisFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnalysisFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.ID");
	    }

)
))
;





// Entry rule entryRuleInformation
entryRuleInformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInformationRule()); }
	 iv_ruleInformation=ruleInformation 
	 { $current=$iv_ruleInformation.current; } 
	 EOF 
;

// Rule Information
ruleInformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInformationAccess().getInformationAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInformationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInformationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.ID");
	    }

)
))
;





// Entry rule entryRuleSpecObj
entryRuleSpecObj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecObjRule()); }
	 iv_ruleSpecObj=ruleSpecObj 
	 { $current=$iv_ruleSpecObj.current; } 
	 EOF 
;

// Rule SpecObj
ruleSpecObj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SPECOBJECTDELIMITERLEFT_0=RULE_SPECOBJECTDELIMITERLEFT
    { 
    newLeafNode(this_SPECOBJECTDELIMITERLEFT_0, grammarAccess.getSpecObjAccess().getSPECOBJECTDELIMITERLEFTTerminalRuleCall_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getSpecObjAccess().getHeadingSOParserRuleCall_1_0()); 
    }
    this_HeadingSO_1=ruleHeadingSO
    { 
        $current = $this_HeadingSO_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecObjAccess().getReqPatSOParserRuleCall_1_1()); 
    }
    this_ReqPatSO_2=ruleReqPatSO
    { 
        $current = $this_ReqPatSO_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecObjAccess().getFreeTextSOParserRuleCall_1_2()); 
    }
    this_FreeTextSO_3=ruleFreeTextSO
    { 
        $current = $this_FreeTextSO_3.current; 
        afterParserOrEnumRuleCall();
    }
)this_SPECOBJECTDELIMITERRIGHT_4=RULE_SPECOBJECTDELIMITERRIGHT
    { 
    newLeafNode(this_SPECOBJECTDELIMITERRIGHT_4, grammarAccess.getSpecObjAccess().getSPECOBJECTDELIMITERRIGHTTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleHeadingSO
entryRuleHeadingSO returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeadingSORule()); }
	 iv_ruleHeadingSO=ruleHeadingSO 
	 { $current=$iv_ruleHeadingSO.current; } 
	 EOF 
;

// Rule HeadingSO
ruleHeadingSO returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHeadingSOAccess().getHeadingSpecObjectAction_0(),
            $current);
    }
)this_PARAMDELIMITERLEFT_1=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_1, grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); 
    }
	otherlv_2='H' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeadingSOAccess().getHKeyword_2());
    }
this_PARAMDELIMITERRIGHT_3=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_3, grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); 
    }
this_PARAMDELIMITERLEFT_4=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_4, grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); 
    }
(
(
		lv_id_5_0=RULE_ID
		{
			newLeafNode(lv_id_5_0, grammarAccess.getHeadingSOAccess().getIdIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeadingSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.ID");
	    }

)
)this_PARAMDELIMITERRIGHT_6=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_6, grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); 
    }
(this_PARAMDELIMITERLEFT_7=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_7, grammarAccess.getHeadingSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); 
    }
(
(
		lv_parent_8_0=RULE_STRING
		{
			newLeafNode(lv_parent_8_0, grammarAccess.getHeadingSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeadingSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parent",
        		lv_parent_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)this_PARAMDELIMITERRIGHT_9=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_9, grammarAccess.getHeadingSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); 
    }
)?(
(
		lv_text_10_0=RULE_STRING
		{
			newLeafNode(lv_text_10_0, grammarAccess.getHeadingSOAccess().getTextSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeadingSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_10_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleReqPatSO
entryRuleReqPatSO returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReqPatSORule()); }
	 iv_ruleReqPatSO=ruleReqPatSO 
	 { $current=$iv_ruleReqPatSO.current; } 
	 EOF 
;

// Rule ReqPatSO
ruleReqPatSO returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReqPatSOAccess().getRequirementPatternSpecObjectAction_0(),
            $current);
    }
)this_PARAMDELIMITERLEFT_1=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_1, grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); 
    }
	otherlv_2='RP' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReqPatSOAccess().getRPKeyword_2());
    }
this_PARAMDELIMITERRIGHT_3=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_3, grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); 
    }
this_PARAMDELIMITERLEFT_4=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_4, grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); 
    }
(
(
		lv_id_5_0=RULE_ID
		{
			newLeafNode(lv_id_5_0, grammarAccess.getReqPatSOAccess().getIdIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReqPatSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.ID");
	    }

)
)this_PARAMDELIMITERRIGHT_6=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_6, grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); 
    }
(this_PARAMDELIMITERLEFT_7=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_7, grammarAccess.getReqPatSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); 
    }
(
(
		lv_parent_8_0=RULE_STRING
		{
			newLeafNode(lv_parent_8_0, grammarAccess.getReqPatSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReqPatSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parent",
        		lv_parent_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)this_PARAMDELIMITERRIGHT_9=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_9, grammarAccess.getReqPatSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getReqPatSOAccess().getRequirementPatternsRequirementPatternParserRuleCall_8_0()); 
	    }
		lv_requirementPatterns_10_0=ruleRequirementPattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReqPatSORule());
	        }
       		add(
       			$current, 
       			"requirementPatterns",
        		lv_requirementPatterns_10_0, 
        		"de.fraunhofer.iem.reqpat.demo.ReqPatDemo.RequirementPattern");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleFreeTextSO
entryRuleFreeTextSO returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFreeTextSORule()); }
	 iv_ruleFreeTextSO=ruleFreeTextSO 
	 { $current=$iv_ruleFreeTextSO.current; } 
	 EOF 
;

// Rule FreeTextSO
ruleFreeTextSO returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFreeTextSOAccess().getFreeTextSpecObjectAction_0(),
            $current);
    }
)this_PARAMDELIMITERLEFT_1=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_1, grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_1()); 
    }
	otherlv_2='F' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFreeTextSOAccess().getFKeyword_2());
    }
this_PARAMDELIMITERRIGHT_3=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_3, grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_3()); 
    }
this_PARAMDELIMITERLEFT_4=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_4, grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_4()); 
    }
(
(
		lv_id_5_0=RULE_ID
		{
			newLeafNode(lv_id_5_0, grammarAccess.getFreeTextSOAccess().getIdIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFreeTextSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"de.fraunhofer.iem.reqpat.core.ReqPat.ID");
	    }

)
)this_PARAMDELIMITERRIGHT_6=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_6, grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_6()); 
    }
(this_PARAMDELIMITERLEFT_7=RULE_PARAMDELIMITERLEFT
    { 
    newLeafNode(this_PARAMDELIMITERLEFT_7, grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERLEFTTerminalRuleCall_7_0()); 
    }
(
(
		lv_parent_8_0=RULE_STRING
		{
			newLeafNode(lv_parent_8_0, grammarAccess.getFreeTextSOAccess().getParentSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFreeTextSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parent",
        		lv_parent_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)this_PARAMDELIMITERRIGHT_9=RULE_PARAMDELIMITERRIGHT
    { 
    newLeafNode(this_PARAMDELIMITERRIGHT_9, grammarAccess.getFreeTextSOAccess().getPARAMDELIMITERRIGHTTerminalRuleCall_7_2()); 
    }
)?(
(
		lv_freeText_10_0=RULE_STRING
		{
			newLeafNode(lv_freeText_10_0, grammarAccess.getFreeTextSOAccess().getFreeTextSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFreeTextSORule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"freeText",
        		lv_freeText_10_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)?)
;





RULE_PARAMDELIMITERLEFT : '[';

RULE_PARAMDELIMITERRIGHT : ']';

RULE_SPECOBJECTDELIMITERLEFT : '{';

RULE_SPECOBJECTDELIMITERRIGHT : '}';

RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


